<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="egovframework.let.room.service.impl.EgovRoomMapper">
	<!-- 사용 가능한 외희실 목록을 모두 조회 (DEL_YN = 'N'인 경우만) -->
	<select id="selectRoomList" resultType="egovframework.let.room.service.EgovMeetingRoomVO">
	    SELECT 
	        ROOM_ID         AS roomId,
	        ROOM_NAME       AS roomName,
	        EQUIPMENT_INFO  AS equipmentInfo,
	        CAPACITY,
	        LOCATION
	    FROM MEETING_ROOM
	    WHERE 
	        DEL_YN = 'N' 
	        AND USE_YN = 'Y'
	    ORDER BY 
	        ROOM_NAME ASC
	</select>

	<!-- 회의실 상세 정보를 roomId로 조회 -->
	<select id="selectRoomById" parameterType="long"
		resultType="egovframework.let.room.service.EgovMeetingRoomVO">
		SELECT *
		FROM MEETING_ROOM
		WHERE ROOM_ID = #{roomId}
	</select>

	<!-- 새로운 회의실 예약을 ROOM_RESERVATION 테이블에 등록  -->
	<insert id="insertReservation"
		parameterType="egovframework.let.room.service.EgovRoomReservationVO">
		INSERT INTO ROOM_RESERVATION (
		RESV_ID, 	-- 예약 고유 ID
		ROOM_ID, 	-- 예약한 회의실 ID
		USER_ID, 	-- 예약한 사용자 ID
		PURPOSE,	-- 용도, 목적
		START_TIME, -- 예약 시작 시간
		END_TIME,   -- 예약 종료 시간 
		STATUS,		-- 예약상태
		REG_DATE	-- 등록일
		) VALUES (
		ROOM_RESERVATION_SEQ.NEXTVAL,
		#{roomId},
		#{userId},
		#{purpose},
		#{startTime},
		#{endTime},
		#{status},
		SYSDATE
		)
	</insert>
	
	<!-- 각 회의실 예약페이지 - 예약현황 달력  -->
	<select id="selectReservationsByRoomId" resultType="egovframework.let.room.service.EgovRoomReservationVO">
	    SELECT 
	        RESV_ID,
	        ROOM_ID,
	        USER_ID,
	        PURPOSE,
	        STATUS,
	        START_TIME,
	        END_TIME,
	        REG_DATE
	    FROM ROOM_RESERVATION
	    WHERE ROOM_ID = #{roomId}
	      AND STATUS IN ('APPROVED', 'APPLIED')
	</select>

	<!-- 내 예약 -->
	<select id="selectReservationsByUser"
	        parameterType="String"
	        resultType="egovframework.let.room.service.EgovRoomReservationVO">
	    SELECT 
	        R.RESV_ID AS resvId,
	        R.ROOM_ID AS roomId,
	        R.USER_ID AS userId,
	        R.PURPOSE AS purpose,
	        R.START_TIME AS startTime,
	        R.END_TIME AS endTime,
	        R.STATUS AS status,
	        R.REG_DATE AS regDate,
	        M.ROOM_NAME AS roomName
	    FROM 
	        ROOM_RESERVATION R
	    JOIN 
	        MEETING_ROOM M ON R.ROOM_ID = M.ROOM_ID
	    WHERE 
	        R.USER_ID = #{userId}
	    ORDER BY R.START_TIME DESC
	</select>


	<!-- 전체 예약 목록을 조회 (관리자 페이지 용도) -->
	<select id="selectAllReservations"
	        resultType="egovframework.let.room.service.EgovRoomReservationVO">
	    SELECT 
	        R.RESV_ID AS resvId,
	        R.ROOM_ID AS roomId,
	        R.USER_ID AS userId,
	        R.PURPOSE AS purpose,
	        R.START_TIME AS startTime,
	        R.END_TIME AS endTime,
	        R.STATUS AS status,
	        R.REG_DATE AS regDate,
	        M.ROOM_NAME AS roomName
	    FROM 
	        ROOM_RESERVATION R
	    JOIN 
	        MEETING_ROOM M ON R.ROOM_ID = M.ROOM_ID
	    ORDER BY R.RESV_ID DESC
	</select>
	
	<!-- 예약취소 -->
	<update id="updateReservationStatusToCancelled" parameterType="int">
	    UPDATE ROOM_RESERVATION
	    SET STATUS = 'CANCELLED'
	    WHERE RESV_ID = #{resvId}
	</update>
	
	<!-- 관리자 - 예약 승인 / 반려 --> 
	<update id="updateReservationStatus" parameterType="map">
	    UPDATE ROOM_RESERVATION
	    SET STATUS = #{status}
	    WHERE RESV_ID = #{resvId}
	</update>
	
	<!-- 관리자 - 회의실 등록 -->
	<insert id="insertRoom" parameterType="egovframework.let.room.service.EgovMeetingRoomVO">
	    INSERT INTO MEETING_ROOM (
	    	ROOM_ID, ROOM_NAME, CAPACITY, LOCATION, EQUIPMENT_INFO, DEL_YN, USE_YN
	    )
	    VALUES ( 
	    	ROOM_SEQ.NEXTVAL, #{roomName}, #{capacity}, #{location}, #{equipmentInfo}, #{delYn}, #{useYn}
	    )
	</insert>
	
	<!-- 관리자 회의실 목록 조회(사용가능한것 불가능한것 전부 조회) -->
	<select id="selectAdminRoomList" resultType="egovframework.let.room.service.EgovMeetingRoomVO">
	    SELECT 
	        ROOM_ID         AS roomId,
	        ROOM_NAME       AS roomName,
	        EQUIPMENT_INFO  AS equipmentInfo,
	        CAPACITY,
	        LOCATION,
	        USE_YN          AS useYn,
	        REG_DATE        AS regDate
	    FROM MEETING_ROOM
	    WHERE 
	        DEL_YN = 'N' 
	    ORDER BY 
	        ROOM_ID ASC
	</select>
</mapper>